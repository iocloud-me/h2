var searchIndex={};
searchIndex["h2"] = {"doc":"An asynchronous, HTTP/2.0 server and client implementation.","i":[[3,"Error","h2","Represents HTTP/2.0 operation errors.",null,null],[3,"Reason","","HTTP/2.0 error codes.",null,null],[3,"FlowControl","","A handle to release window capacity to a remote stream.",null,null],[3,"Ping","","Sent via [`PingPong`][] to send a PING frame to a peer.",null,null],[3,"PingPong","","A handle to send and receive PING frames with the peer.",null,null],[3,"Pong","","Received via [`PingPong`][] when a peer acknowledges a…",null,null],[3,"RecvStream","","Receives the body stream and trailers from the remote peer.",null,null],[3,"SendStream","","Sends the body stream and trailers to the remote peer.",null,null],[3,"StreamId","","A stream identifier, as described in [Section 5.1.1] of…",null,null],[3,"Codec","","",null,null],[4,"RecvError","","Errors that are received",null,null],[13,"Connection","","",0,null],[13,"Stream","","",0,null],[12,"id","h2::RecvError","",0,null],[12,"reason","","",0,null],[13,"Io","h2","",0,null],[4,"SendError","","Errors caused by sending a message",null,null],[13,"User","","User error",1,null],[13,"Connection","","Connection error prevents sending.",1,null],[13,"Io","","I/O error",1,null],[4,"UserError","","Errors caused by users of the library",null,null],[13,"InactiveStreamId","","The stream ID is no longer accepting frames.",2,null],[13,"UnexpectedFrameType","","The stream is not currently expecting a frame of this type.",2,null],[13,"PayloadTooBig","","The payload size is too big",2,null],[13,"HeaderTooBig","","A header size is too big",2,null],[13,"Rejected","","The application attempted to initiate too many streams to…",2,null],[13,"ReleaseCapacityTooBig","","The released capacity is larger than claimed capacity.",2,null],[13,"OverflowedStreamId","","The stream ID space is overflowed.",2,null],[13,"MalformedHeaders","","Illegal headers, such as connection-specific headers.",2,null],[13,"MissingUriSchemeAndAuthority","","Request submitted with relative URI.",2,null],[13,"PollResetAfterSendResponse","","Calls `SendResponse::poll_reset` after having called…",2,null],[13,"SendPingWhilePending","","Calls `PingPong::send_ping` before receiving a pong.",2,null],[13,"SendSettingsWhilePending","","Tries to update local SETTINGS while ACK has not been…",2,null],[11,"new","","Returns a new `Codec` with the default max frame size",3,[[["t"]],["self"]]],[11,"with_max_recv_frame_size","","Returns a new `Codec` with the given maximum frame size",3,[[["t"],["usize"]],["self"]]],[11,"set_max_recv_frame_size","","Updates the max received frame size.",3,[[["self"],["usize"]]]],[11,"max_recv_frame_size","","Returns the current max received frame size setting.",3,[[["self"]],["usize"]]],[11,"max_send_frame_size","","Returns the max frame size that can be sent to the peer.",3,[[["self"]],["usize"]]],[11,"set_max_send_frame_size","","Set the peer's max frame size.",3,[[["self"],["usize"]]]],[11,"set_max_recv_header_list_size","","Set the max header list size that can be received.",3,[[["self"],["usize"]]]],[11,"get_ref","","Get a reference to the inner stream.",3,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the inner stream.",3,[[["self"]],["t"]]],[11,"poll_ready","","Returns `Ready` when the codec can buffer a frame",3,[[["context"],["self"]],[["poll",["result"]],["result"]]]],[11,"buffer","","Buffer a frame.",3,[[["self"],["frame"]],[["usererror"],["result",["usererror"]]]]],[11,"flush","","Flush buffered data to the wire",3,[[["context"],["self"]],[["poll",["result"]],["result"]]]],[11,"shutdown","","Shutdown the send half",3,[[["context"],["self"]],[["poll",["result"]],["result"]]]],[11,"reason","","If the error was caused by the remote peer, the error…",4,[[["self"]],[["option",["reason"]],["reason"]]]],[11,"is_io","","Returns the true if the error is an io::Error",4,[[["self"]],["bool"]]],[11,"get_io","","Returns the error if the error is an io::Error",4,[[["self"]],[["option",["error"]],["error"]]]],[11,"into_io","","Returns the error if the error is an io::Error",4,[[],[["option",["error"]],["error"]]]],[0,"frame","","",null,null],[3,"Data","h2::frame","Data frame",null,null],[3,"GoAway","","",null,null],[3,"Head","","",null,null],[3,"Continuation","","",null,null],[3,"Headers","","Header frame",null,null],[3,"Pseudo","","",null,null],[12,"method","","",5,null],[12,"scheme","","",5,null],[12,"authority","","",5,null],[12,"path","","",5,null],[12,"status","","",5,null],[3,"PushPromise","","",null,null],[3,"Ping","","",null,null],[3,"Priority","","",null,null],[3,"StreamDependency","","",null,null],[3,"Reason","","HTTP/2.0 error codes.",null,null],[3,"Reset","","",null,null],[3,"Settings","","",null,null],[3,"StreamId","","A stream identifier, as described in [Section 5.1.1] of…",null,null],[3,"StreamIdOverflow","","",null,null],[3,"WindowUpdate","","",null,null],[4,"Kind","","",null,null],[13,"Data","","",6,null],[13,"Headers","","",6,null],[13,"Priority","","",6,null],[13,"Reset","","",6,null],[13,"Settings","","",6,null],[13,"PushPromise","","",6,null],[13,"Ping","","",6,null],[13,"GoAway","","",6,null],[13,"WindowUpdate","","",6,null],[13,"Continuation","","",6,null],[13,"Unknown","","",6,null],[4,"PushPromiseHeaderError","","",null,null],[13,"InvalidContentLength","","",7,null],[13,"NotSafeAndCacheable","","",7,null],[4,"Frame","","",null,null],[13,"Data","","",8,null],[13,"Headers","","",8,null],[13,"Priority","","",8,null],[13,"PushPromise","","",8,null],[13,"Settings","","",8,null],[13,"Ping","","",8,null],[13,"GoAway","","",8,null],[13,"WindowUpdate","","",8,null],[13,"Reset","","",8,null],[4,"Error","","Errors that can occur during parsing an HTTP/2 frame.",null,null],[13,"BadFrameSize","","A length value other than 8 was set on a PING message.",9,null],[13,"TooMuchPadding","","The padding length was larger than the…",9,null],[13,"InvalidSettingValue","","An invalid setting value was provided",9,null],[13,"InvalidWindowUpdateValue","","An invalid window update value",9,null],[13,"InvalidPayloadLength","","The payload length specified by the frame header was not…",9,null],[13,"InvalidPayloadAckSettings","","Received a payload with an ACK settings frame",9,null],[13,"InvalidStreamId","","An invalid stream identifier was provided.",9,null],[13,"MalformedMessage","","A request or response is malformed.",9,null],[13,"InvalidDependencyId","","An invalid stream dependency ID was provided",9,null],[13,"Hpack","","Failed to perform HPACK decoding",9,null],[5,"parse_u64","","",null,[[],[["result",["u64"]],["u64"]]]],[11,"new","","Creates a new DATA frame.",10,[[["streamid"],["t"]],["self"]]],[11,"stream_id","","Returns the stream identifer that this frame is associated…",10,[[["self"]],["streamid"]]],[11,"is_end_stream","","Gets the value of the `END_STREAM` flag for this frame.",10,[[["self"]],["bool"]]],[11,"set_end_stream","","Sets the value for the `END_STREAM` flag on this frame.",10,[[["self"],["bool"]]]],[11,"is_padded","","Returns whther the `PADDED` flag is set on this frame.",10,[[["self"]],["bool"]]],[11,"set_padded","","Sets the value for the `PADDED` flag on this frame.",10,[[["self"]]]],[11,"payload","","Returns a reference to this frame's payload.",10,[[["self"]],["t"]]],[11,"payload_mut","","Returns a mutable reference to this frame's payload.",10,[[["self"]],["t"]]],[11,"into_payload","","Consumes `self` and returns the frame's payload.",10,[[],["t"]]],[11,"new","","",11,[[["streamid"],["reason"]],["self"]]],[11,"last_stream_id","","",11,[[["self"]],["streamid"]]],[11,"reason","","",11,[[["self"]],["reason"]]],[11,"debug_data","","",11,[[["self"]]]],[11,"load","","",11,[[],[["result",["goaway","error"]],["goaway"],["error"]]]],[11,"encode","","",11,[[["self"],["b"]]]],[11,"new","","",12,[[["streamid"],["kind"],["u8"]],["head"]]],[11,"parse","","Parse an HTTP/2.0 frame header",12,[[],["head"]]],[11,"stream_id","","",12,[[["self"]],["streamid"]]],[11,"kind","","",12,[[["self"]],["kind"]]],[11,"flag","","",12,[[["self"]],["u8"]]],[11,"encode_len","","",12,[[["self"]],["usize"]]],[11,"encode","","",12,[[["t"],["self"],["usize"]]]],[11,"new","","",6,[[["u8"]],["kind"]]],[11,"new","","Create a new HEADERS frame",13,[[["pseudo"],["headermap"],["streamid"]],["self"]]],[11,"trailers","","",13,[[["headermap"],["streamid"]],["self"]]],[11,"load","","Loads the header frame but doesn't actually do HPACK…",13,[[["head"],["bytesmut"]],[["result",["error"]],["error"]]]],[11,"load_hpack","","",13,[[["bytesmut"],["usize"],["self"],["decoder"]],[["result",["error"]],["error"]]]],[11,"stream_id","","",13,[[["self"]],["streamid"]]],[11,"is_end_headers","","",13,[[["self"]],["bool"]]],[11,"set_end_headers","","",13,[[["self"]]]],[11,"is_end_stream","","",13,[[["self"]],["bool"]]],[11,"set_end_stream","","",13,[[["self"]]]],[11,"is_over_size","","",13,[[["self"]],["bool"]]],[11,"into_parts","","",13,[[]]],[11,"pseudo_mut","","",13,[[["self"]],["pseudo"]]],[11,"fields","","",13,[[["self"]],["headermap"]]],[11,"into_fields","","",13,[[],["headermap"]]],[11,"encode","","",13,[[["encoder"],["limit"]],[["option",["continuation"]],["continuation"]]]],[11,"new","","",14,[[["pseudo"],["headermap"],["streamid"]],["self"]]],[11,"validate_request","","",14,[[["request"]],[["result",["pushpromiseheadererror"]],["pushpromiseheadererror"]]]],[11,"fields","","",14,[[["self"]],["headermap"]]],[11,"into_fields","","",14,[[],["headermap"]]],[11,"load","","Loads the push promise frame but doesn't actually do HPACK…",14,[[["head"],["bytesmut"]],[["result",["error"]],["error"]]]],[11,"load_hpack","","",14,[[["bytesmut"],["usize"],["self"],["decoder"]],[["result",["error"]],["error"]]]],[11,"stream_id","","",14,[[["self"]],["streamid"]]],[11,"promised_id","","",14,[[["self"]],["streamid"]]],[11,"is_end_headers","","",14,[[["self"]],["bool"]]],[11,"set_end_headers","","",14,[[["self"]]]],[11,"is_over_size","","",14,[[["self"]],["bool"]]],[11,"encode","","",14,[[["encoder"],["limit"]],[["option",["continuation"]],["continuation"]]]],[11,"into_parts","","Consume `self`, returning the parts of the frame",14,[[]]],[11,"encode","","",15,[[["encoder"],["limit"]],[["option",["continuation"]],["continuation"]]]],[11,"request","","",5,[[["method"],["uri"]],["self"]]],[11,"response","","",5,[[["statuscode"]],["self"]]],[11,"set_scheme","","",5,[[["self"],["scheme"]]]],[11,"set_authority","","",5,[[["self"],["bytesstr"]]]],[18,"SHUTDOWN","","",16,null],[18,"USER","","",16,null],[11,"new","","",16,[[],["ping"]]],[11,"pong","","",16,[[],["ping"]]],[11,"is_ack","","",16,[[["self"]],["bool"]]],[11,"payload","","",16,[[["self"]]]],[11,"into_payload","","",16,[[]]],[11,"load","","Builds a `Ping` frame from a raw frame.",16,[[["head"]],[["error"],["result",["ping","error"]],["ping"]]]],[11,"encode","","",16,[[["self"],["b"]]]],[11,"load","","",17,[[["head"]],[["error"],["result",["error"]]]]],[11,"new","","",18,[[["bool"],["streamid"],["u8"]],["self"]]],[11,"load","","",18,[[],[["error"],["result",["error"]]]]],[11,"dependency_id","","",18,[[["self"]],["streamid"]]],[18,"NO_ERROR","h2","The associated condition is not a result of an error.",19,null],[18,"PROTOCOL_ERROR","","The endpoint detected an unspecific protocol error.",19,null],[18,"INTERNAL_ERROR","","The endpoint encountered an unexpected internal error.",19,null],[18,"FLOW_CONTROL_ERROR","","The endpoint detected that its peer violated the…",19,null],[18,"SETTINGS_TIMEOUT","","The endpoint sent a SETTINGS frame but did not receive a…",19,null],[18,"STREAM_CLOSED","","The endpoint received a frame after a stream was…",19,null],[18,"FRAME_SIZE_ERROR","","The endpoint received a frame with an invalid size.",19,null],[18,"REFUSED_STREAM","","The endpoint refused the stream prior to performing any…",19,null],[18,"CANCEL","","Used by the endpoint to indicate that the stream is no…",19,null],[18,"COMPRESSION_ERROR","","The endpoint is unable to maintain the header compression…",19,null],[18,"CONNECT_ERROR","","The connection established in response to a CONNECT…",19,null],[18,"ENHANCE_YOUR_CALM","","The endpoint detected that its peer is exhibiting a…",19,null],[18,"INADEQUATE_SECURITY","","The underlying transport has properties that do not meet…",19,null],[18,"HTTP_1_1_REQUIRED","","The endpoint requires that HTTP/1.1 be used instead of…",19,null],[11,"description","","Get a string description of the error code.",19,[[["self"]],["str"]]],[11,"new","h2::frame","",20,[[["streamid"],["reason"]],["reset"]]],[11,"stream_id","","",20,[[["self"]],["streamid"]]],[11,"reason","","",20,[[["self"]],["reason"]]],[11,"load","","",20,[[["head"]],[["error"],["result",["reset","error"]],["reset"]]]],[11,"encode","","",20,[[["self"],["b"]]]],[11,"ack","","",21,[[],["settings"]]],[11,"is_ack","","",21,[[["self"]],["bool"]]],[11,"initial_window_size","","",21,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"set_initial_window_size","","",21,[[["self"],["u32"],["option",["u32"]]]]],[11,"max_concurrent_streams","","",21,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"set_max_concurrent_streams","","",21,[[["self"],["u32"],["option",["u32"]]]]],[11,"max_frame_size","","",21,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"set_max_frame_size","","",21,[[["self"],["u32"],["option",["u32"]]]]],[11,"max_header_list_size","","",21,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"set_max_header_list_size","","",21,[[["self"],["u32"],["option",["u32"]]]]],[11,"is_push_enabled","","",21,[[["self"]],["bool"]]],[11,"set_enable_push","","",21,[[["self"],["bool"]]]],[11,"load","","",21,[[["head"]],[["error"],["settings"],["result",["settings","error"]]]]],[11,"encode","","",21,[[["bytesmut"],["self"]]]],[18,"ZERO","","Stream ID 0.",22,null],[18,"MAX","","The maximum allowed stream ID.",22,null],[11,"parse","","Parse the stream ID",22,[[]]],[11,"is_client_initiated","","Returns true if this stream ID corresponds to a stream…",22,[[["self"]],["bool"]]],[11,"is_server_initiated","","Returns true if this stream ID corresponds to a stream…",22,[[["self"]],["bool"]]],[11,"zero","","Return a new `StreamId` for stream 0.",22,[[],["streamid"]]],[11,"is_zero","","Returns true if this stream ID is zero.",22,[[["self"]],["bool"]]],[11,"next_id","","Returns the next stream ID initiated by the same peer as…",22,[[["self"]],[["streamidoverflow"],["streamid"],["result",["streamid","streamidoverflow"]]]]],[11,"new","","",23,[[["u32"],["streamid"]],["windowupdate"]]],[11,"stream_id","","",23,[[["self"]],["streamid"]]],[11,"size_increment","","",23,[[["self"]],["u32"]]],[11,"load","","Builds a `WindowUpdate` frame from a raw frame.",23,[[["head"]],[["result",["windowupdate","error"]],["windowupdate"],["error"]]]],[11,"encode","","",23,[[["self"],["b"]]]],[6,"FrameSize","","",null,null],[17,"DEFAULT_INITIAL_WINDOW_SIZE","","The default value of SETTINGS_INITIAL_WINDOW_SIZE",null,null],[17,"DEFAULT_MAX_FRAME_SIZE","","The default value of MAX_FRAME_SIZE",null,null],[17,"DEFAULT_SETTINGS_HEADER_TABLE_SIZE","","The default value of SETTINGS_HEADER_TABLE_SIZE",null,null],[17,"MAX_INITIAL_WINDOW_SIZE","","INITIAL_WINDOW_SIZE upper bound",null,null],[17,"MAX_MAX_FRAME_SIZE","","MAX_FRAME_SIZE upper bound",null,null],[17,"HEADER_LEN","","",null,null],[11,"map","","",8,[[["f"]],["frame"]]],[0,"client","h2","Client implementation of the HTTP/2.0 protocol.",null,null],[3,"SendRequest","h2::client","Initializes new HTTP/2.0 streams on a connection by…",null,null],[3,"ReadySendRequest","","Returns a `SendRequest` instance once it is ready to send…",null,null],[3,"Connection","","Manages all state associated with an HTTP/2.0 client…",null,null],[3,"ResponseFuture","","A future of an HTTP response.",null,null],[3,"PushedResponseFuture","","A future of a pushed HTTP response.",null,null],[3,"PushPromise","","A pushed response and corresponding request headers",null,null],[3,"PushPromises","","A stream of pushed responses and corresponding promised…",null,null],[3,"Builder","","Builds client connections with custom configuration values.",null,null],[5,"handshake","","Creates a new configured HTTP/2.0 client with default…",null,[[["t"]]]],[11,"poll_ready","","Returns `Ready` when the connection can initialize a new…",24,[[["context"],["self"]],[["poll",["result"]],["result",["error"]]]]],[11,"ready","","Consumes `self`, returning a future that returns `self`…",24,[[],["readysendrequest"]]],[11,"send_request","","Sends a HTTP/2.0 request to the server.",24,[[["request"],["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"num_active_streams","","Returns the number of active streams.",24,[[["self"]],["usize"]]],[11,"num_wired_streams","","Returns the number of streams that are held in memory.",24,[[["self"]],["usize"]]],[11,"new","","Returns a new client builder instance initialized with…",25,[[],["builder"]]],[11,"initial_window_size","","Indicates the initial window size (in octets) for…",25,[[["self"],["u32"]],["self"]]],[11,"initial_connection_window_size","","Indicates the initial window size (in octets) for…",25,[[["self"],["u32"]],["self"]]],[11,"max_frame_size","","Indicates the size (in octets) of the largest HTTP/2.0…",25,[[["self"],["u32"]],["self"]]],[11,"max_header_list_size","","Sets the max size of received header frames.",25,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_streams","","Sets the maximum number of concurrent streams.",25,[[["self"],["u32"]],["self"]]],[11,"initial_max_send_streams","","Sets the initial maximum of locally initiated (send)…",25,[[["self"],["usize"]],["self"]]],[11,"max_concurrent_reset_streams","","Sets the maximum number of concurrent locally reset streams.",25,[[["self"],["usize"]],["self"]]],[11,"reset_stream_duration","","Sets the duration to remember locally reset streams.",25,[[["self"],["duration"]],["self"]]],[11,"enable_push","","Enables or disables server push promises.",25,[[["self"],["bool"]],["self"]]],[11,"initial_stream_id","","Sets the first stream ID to something other than 1.",25,[[["self"],["u32"]],["self"]]],[11,"handshake","","Creates a new configured HTTP/2.0 client backed by `io`.",25,[[["self"],["t"]]]],[11,"set_target_window_size","","Sets the target window size for the whole connection.",26,[[["self"],["u32"]]]],[11,"set_initial_window_size","","Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for…",26,[[["self"],["u32"]],[["error"],["result",["error"]]]]],[11,"ping_pong","","Takes a `PingPong` instance from the connection.",26,[[["self"]],[["pingpong"],["option",["pingpong"]]]]],[11,"stream_id","","Returns the stream ID of the response stream.",27,[[["self"]],["streamid"]]],[11,"push_promises","","Returns a stream of PushPromises",27,[[["self"]],["pushpromises"]]],[11,"push_promise","","Get the next `PushPromise`.",28,[[["self"]]]],[11,"request","","Returns a reference to the push promise's request headers.",29,[[["self"]],["request"]]],[11,"request_mut","","Returns a mutable reference to the push promise's request…",29,[[["self"]],["request"]]],[11,"into_parts","","Consumes `self`, returning the push promise's request…",29,[[]]],[11,"stream_id","","Returns the stream ID of the response stream.",30,[[["self"]],["streamid"]]],[0,"server","h2","Server implementation of the HTTP/2.0 protocol.",null,null],[3,"Handshake","h2::server","In progress HTTP/2.0 connection handshake future.",null,null],[3,"Connection","","Accepts inbound HTTP/2.0 streams on a connection.",null,null],[3,"Builder","","Builds server connections with custom configuration values.",null,null],[3,"SendResponse","","Send a response back to the client",null,null],[3,"SendPushedResponse","","Send a response to a promised request",null,null],[5,"handshake","","Creates a new configured HTTP/2.0 server with default…",null,[[["t"]],[["handshake",["bytes"]],["bytes"]]]],[11,"accept","","Accept the next incoming request on this connection.",31,[[["self"]]]],[11,"set_target_window_size","","Sets the target window size for the whole connection.",31,[[["self"],["u32"]]]],[11,"set_initial_window_size","","Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for…",31,[[["self"],["u32"]],[["error"],["result",["error"]]]]],[11,"poll_closed","","Returns `Ready` when the underlying connection has closed.",31,[[["context"],["self"]],[["poll",["result"]],["result",["error"]]]]],[11,"abrupt_shutdown","","Sets the connection to a GOAWAY state.",31,[[["self"],["reason"]]]],[11,"graceful_shutdown","","Starts a [graceful shutdown][1] process.",31,[[["self"]]]],[11,"ping_pong","","Takes a `PingPong` instance from the connection.",31,[[["self"]],[["pingpong"],["option",["pingpong"]]]]],[11,"new","","Returns a new server builder instance initialized with…",32,[[],["builder"]]],[11,"initial_window_size","","Indicates the initial window size (in octets) for…",32,[[["self"],["u32"]],["self"]]],[11,"initial_connection_window_size","","Indicates the initial window size (in octets) for…",32,[[["self"],["u32"]],["self"]]],[11,"max_frame_size","","Indicates the size (in octets) of the largest HTTP/2.0…",32,[[["self"],["u32"]],["self"]]],[11,"max_header_list_size","","Sets the max size of received header frames.",32,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_streams","","Sets the maximum number of concurrent streams.",32,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_reset_streams","","Sets the maximum number of concurrent locally reset streams.",32,[[["self"],["usize"]],["self"]]],[11,"reset_stream_duration","","Sets the maximum number of concurrent locally reset streams.",32,[[["self"],["duration"]],["self"]]],[11,"handshake","","Creates a new configured HTTP/2.0 server backed by `io`.",32,[[["self"],["t"]],["handshake"]]],[11,"send_response","","Send a response to a client request.",33,[[["self"],["response"],["bool"]],[["result",["sendstream","error"]],["sendstream"],["error"]]]],[11,"push_request","","Push a request and response to the client",33,[[["request"],["self"]],[["result",["sendpushedresponse","error"]],["sendpushedresponse"],["error"]]]],[11,"send_reset","","Send a stream reset to the peer.",33,[[["self"],["reason"]]]],[11,"poll_reset","","Polls to be notified when the client resets this stream.",33,[[["context"],["self"]],[["result",["reason","error"]],["poll",["result"]]]]],[11,"stream_id","","Returns the stream ID of the response stream.",33,[[["self"]],["streamid"]]],[11,"send_response","","Send a response to a promised request.",34,[[["self"],["response"],["bool"]],[["result",["sendstream","error"]],["sendstream"],["error"]]]],[11,"send_reset","","Send a stream reset to the peer.",34,[[["self"],["reason"]]]],[11,"poll_reset","","Polls to be notified when the client resets this stream.",34,[[["context"],["self"]],[["result",["reason","error"]],["poll",["result"]]]]],[11,"stream_id","","Returns the stream ID of the response stream.",34,[[["self"]],["streamid"]]],[11,"reserve_capacity","h2","Requests capacity to send data.",35,[[["self"],["usize"]]]],[11,"capacity","","Returns the stream's current send capacity.",35,[[["self"]],["usize"]]],[11,"poll_capacity","","Requests to be notified when the stream's capacity…",35,[[["context"],["self"]],[["poll",["option"]],["option",["result"]]]]],[11,"send_data","","Sends a single data frame to the remote peer.",35,[[["self"],["b"],["bool"]],[["error"],["result",["error"]]]]],[11,"send_trailers","","Sends trailers to the remote peer.",35,[[["self"],["headermap"]],[["error"],["result",["error"]]]]],[11,"send_reset","","Resets the stream.",35,[[["self"],["reason"]]]],[11,"poll_reset","","Polls to be notified when the client resets this stream.",35,[[["context"],["self"]],[["result",["reason","error"]],["poll",["result"]]]]],[11,"stream_id","","Returns the stream ID of this `SendStream`.",35,[[["self"]],["streamid"]]],[11,"data","","Get the next data frame.",36,[[["self"]]]],[11,"trailers","","Get optional trailers for this stream.",36,[[["self"]]]],[11,"is_end_stream","","Returns true if the receive half has reached the end of…",36,[[["self"]],["bool"]]],[11,"flow_control","","Get a mutable reference to this stream's `FlowControl`.",36,[[["self"]],["flowcontrol"]]],[11,"stream_id","","Returns the stream ID of this stream.",36,[[["self"]],["streamid"]]],[11,"stream_id","","Returns the stream ID of the stream whose capacity will be…",37,[[["self"]],["streamid"]]],[11,"available_capacity","","Get the current available capacity of data this stream…",37,[[["self"]],["isize"]]],[11,"used_capacity","","Get the currently used capacity for this stream.",37,[[["self"]],["usize"]]],[11,"release_capacity","","Release window capacity back to remote stream.",37,[[["self"],["usize"]],[["error"],["result",["error"]]]]],[11,"ping","","Send a PING frame and wait for the peer to send the pong.",38,[[["ping"],["self"]]]],[11,"opaque","","Creates a new opaque `Ping` to be sent via a [`PingPong`][].",39,[[],["ping"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"equivalent","","",19,[[["k"],["self"]],["bool"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"try_poll_next","","",36,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"equivalent","","",41,[[["k"],["self"]],["bool"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"try_poll_next","","",3,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","h2::frame","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"equivalent","","",10,[[["k"],["self"]],["bool"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"equivalent","","",11,[[["k"],["self"]],["bool"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"equivalent","","",12,[[["k"],["self"]],["bool"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"equivalent","","",13,[[["k"],["self"]],["bool"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"equivalent","","",14,[[["k"],["self"]],["bool"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"equivalent","","",16,[[["k"],["self"]],["bool"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"equivalent","","",17,[[["k"],["self"]],["bool"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"equivalent","","",18,[[["k"],["self"]],["bool"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"equivalent","","",20,[[["k"],["self"]],["bool"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"equivalent","","",21,[[["k"],["self"]],["bool"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"equivalent","","",22,[[["k"],["self"]],["bool"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"equivalent","","",23,[[["k"],["self"]],["bool"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"equivalent","","",6,[[["k"],["self"]],["bool"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"equivalent","","",8,[[["k"],["self"]],["bool"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"equivalent","","",9,[[["k"],["self"]],["bool"]]],[11,"from","h2::client","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"try_poll","","",43,[[["f"],["context"],["pin"]],["poll"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"try_poll","","",26,[[["f"],["context"],["pin"]],["poll"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"try_poll","","",27,[[["f"],["context"],["pin"]],["poll"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"try_poll","","",30,[[["f"],["context"],["pin"]],["poll"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"try_poll_next","","",28,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","h2::server","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"try_poll","","",44,[[["f"],["context"],["pin"]],["poll"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"try_poll_next","","",31,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"drop","h2","",36,[[["self"]]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"from","","",1,[[["usererror"]],["self"]]],[11,"from","","",3,[[["t"]],["self"]]],[11,"from","","",4,[[["reason"]],["error"]]],[11,"from","","",4,[[["senderror"]],["error"]]],[11,"from","","",4,[[["usererror"]],["error"]]],[11,"from","h2::frame","",8,[[["data"]],["self"]]],[11,"from","","",8,[[["goaway"]],["self"]]],[11,"from","","",8,[[["headers"]],["self"]]],[11,"from","","",8,[[["pushpromise"]],["self"]]],[11,"from","","",8,[[["ping"]],["frame"]]],[11,"from","","",8,[[["priority"]],["self"]]],[11,"from","h2","",19,[[["u32"]],["reason"]]],[11,"from","h2::frame","",8,[[["reset"]],["self"]]],[11,"from","","",8,[[["settings"]],["frame"]]],[11,"from","","",22,[[["u32"]],["self"]]],[11,"from","","",8,[[["windowupdate"]],["self"]]],[11,"clone","","",11,[[["self"]],["goaway"]]],[11,"clone","","",12,[[["self"]],["head"]]],[11,"clone","","",6,[[["self"]],["kind"]]],[11,"clone","h2","",19,[[["self"]],["reason"]]],[11,"clone","h2::frame","",21,[[["self"]],["settings"]]],[11,"clone","","",22,[[["self"]],["streamid"]]],[11,"clone","","",42,[[["self"]],["streamidoverflow"]]],[11,"clone","","",23,[[["self"]],["windowupdate"]]],[11,"clone","","",9,[[["self"]],["error"]]],[11,"clone","h2::client","",25,[[["self"]],["builder"]]],[11,"clone","","",24,[[["self"]],["self"]]],[11,"clone","h2::server","",32,[[["self"]],["builder"]]],[11,"clone","h2","",41,[[["self"]],["streamid"]]],[11,"clone","","",37,[[["self"]],["flowcontrol"]]],[11,"default","h2::frame","",5,[[],["pseudo"]]],[11,"default","","",21,[[],["settings"]]],[11,"default","h2::client","",25,[[],["builder"]]],[11,"default","h2::server","",32,[[],["builder"]]],[11,"cmp","h2::frame","",22,[[["streamid"],["self"]],["ordering"]]],[11,"eq","","",10,[[["self"],["data"]],["bool"]]],[11,"ne","","",10,[[["self"],["data"]],["bool"]]],[11,"eq","","",11,[[["self"],["goaway"]],["bool"]]],[11,"ne","","",11,[[["self"],["goaway"]],["bool"]]],[11,"eq","","",12,[[["head"],["self"]],["bool"]]],[11,"ne","","",12,[[["head"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"],["kind"]],["bool"]]],[11,"eq","","",13,[[["headers"],["self"]],["bool"]]],[11,"ne","","",13,[[["headers"],["self"]],["bool"]]],[11,"eq","","",14,[[["pushpromise"],["self"]],["bool"]]],[11,"ne","","",14,[[["pushpromise"],["self"]],["bool"]]],[11,"eq","","",5,[[["pseudo"],["self"]],["bool"]]],[11,"ne","","",5,[[["pseudo"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["ping"]],["bool"]]],[11,"ne","","",16,[[["self"],["ping"]],["bool"]]],[11,"eq","","",17,[[["self"],["priority"]],["bool"]]],[11,"ne","","",17,[[["self"],["priority"]],["bool"]]],[11,"eq","","",18,[[["self"],["streamdependency"]],["bool"]]],[11,"ne","","",18,[[["self"],["streamdependency"]],["bool"]]],[11,"eq","h2","",19,[[["self"],["reason"]],["bool"]]],[11,"ne","","",19,[[["self"],["reason"]],["bool"]]],[11,"eq","h2::frame","",20,[[["reset"],["self"]],["bool"]]],[11,"ne","","",20,[[["reset"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["settings"]],["bool"]]],[11,"ne","","",21,[[["self"],["settings"]],["bool"]]],[11,"eq","","",22,[[["streamid"],["self"]],["bool"]]],[11,"ne","","",22,[[["streamid"],["self"]],["bool"]]],[11,"eq","","",22,[[["u32"],["self"]],["bool"]]],[11,"eq","","",23,[[["windowupdate"],["self"]],["bool"]]],[11,"ne","","",23,[[["windowupdate"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["frame"]],["bool"]]],[11,"ne","","",8,[[["self"],["frame"]],["bool"]]],[11,"eq","","",9,[[["self"],["error"]],["bool"]]],[11,"ne","","",9,[[["self"],["error"]],["bool"]]],[11,"eq","h2","",41,[[["streamid"],["self"]],["bool"]]],[11,"ne","","",41,[[["streamid"],["self"]],["bool"]]],[11,"partial_cmp","h2::frame","",22,[[["streamid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",22,[[["streamid"],["self"]],["bool"]]],[11,"le","","",22,[[["streamid"],["self"]],["bool"]]],[11,"gt","","",22,[[["streamid"],["self"]],["bool"]]],[11,"ge","","",22,[[["streamid"],["self"]],["bool"]]],[11,"fmt","h2","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","h2::frame","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","h2","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","h2::frame","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","h2::client","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","h2::server","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","h2","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"hash","h2::frame","",22,[[["self"],["__h"]]]],[11,"hash","h2","",41,[[["self"],["__h"]]]],[11,"poll","h2::client","",43,[[["context"],["self"],["pin"]],["poll"]]],[11,"poll","","",26,[[["context"],["self"],["pin"]],["poll"]]],[11,"poll","","",27,[[["context"],["self"],["pin"]],["poll"]]],[11,"poll","","",30,[[["context"],["self"],["pin"]],["poll"]]],[11,"poll","h2::server","",44,[[["context"],["self"],["pin"]],["poll"]]],[11,"poll_next","h2","",3,[[["context"],["self"],["pin"]],[["poll",["option"]],["option"]]]],[11,"poll_next","h2::client","",28,[[["context"],["self"],["pin"]],[["poll",["option"]],["option"]]]],[11,"poll_next","h2::server","",31,[[["context"],["self"],["pin"]],[["poll",["option"]],["option"]]]],[11,"poll_next","h2","",36,[[["context"],["self"],["pin"]],[["poll",["option"]],["option"]]]],[11,"start_send","","",3,[[["self"],["pin"],["frame"]],["result"]]],[11,"poll_ready","","Returns `Ready` when the codec can buffer a frame",3,[[["context"],["self"],["pin"]],[["poll",["result"]],["result"]]]],[11,"poll_flush","","Flush buffered data to the wire",3,[[["context"],["self"],["pin"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",3,[[["context"],["self"],["pin"]],[["poll",["result"]],["result"]]]]],"p":[[4,"RecvError"],[4,"SendError"],[4,"UserError"],[3,"Codec"],[3,"Error"],[3,"Pseudo"],[4,"Kind"],[4,"PushPromiseHeaderError"],[4,"Frame"],[4,"Error"],[3,"Data"],[3,"GoAway"],[3,"Head"],[3,"Headers"],[3,"PushPromise"],[3,"Continuation"],[3,"Ping"],[3,"Priority"],[3,"StreamDependency"],[3,"Reason"],[3,"Reset"],[3,"Settings"],[3,"StreamId"],[3,"WindowUpdate"],[3,"SendRequest"],[3,"Builder"],[3,"Connection"],[3,"ResponseFuture"],[3,"PushPromises"],[3,"PushPromise"],[3,"PushedResponseFuture"],[3,"Connection"],[3,"Builder"],[3,"SendResponse"],[3,"SendPushedResponse"],[3,"SendStream"],[3,"RecvStream"],[3,"FlowControl"],[3,"PingPong"],[3,"Ping"],[3,"Pong"],[3,"StreamId"],[3,"StreamIdOverflow"],[3,"ReadySendRequest"],[3,"Handshake"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);